apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'

apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'
apply plugin: 'org.greenrobot.greendao' // apply plugin
kapt {
    arguments {
        arg("AROUTER_MODULE_NAME", project.getName())
    }
}

android {
    compileSdkVersion 27



    defaultConfig {
        minSdkVersion 15
        targetSdkVersion 27
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

        javaCompileOptions {
            annotationProcessorOptions {
                arguments = [moduleName  : project.getName()]
            }
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    api "org.jetbrains.kotlin:kotlin-stdlib-jre7:$kotlin_version"
    //noinspection GradleCompatible
    api 'com.android.support:appcompat-v7:27.1.1'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:1.0.2'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'
    api 'com.android.support.constraint:constraint-layout:1.1.3'

    api 'com.orhanobut:logger:2.2.0'

    //RxJava2.0
    api 'io.reactivex.rxjava2:rxjava:2.1.16'
    api 'io.reactivex.rxjava2:rxandroid:2.0.2'
    api 'io.reactivex.rxjava2:rxkotlin:2.2.0'

    //Retrofit2
    api 'com.squareup.retrofit2:retrofit:2.3.0'
    api 'com.squareup.retrofit2:converter-scalars:2.3.0'
    api 'com.squareup.retrofit2:adapter-rxjava2:2.3.0'//配合rxjava2
    api 'com.squareup.retrofit2:converter-gson:2.3.0'
    api 'com.squareup.okhttp3:logging-interceptor:3.9.0'//拦截器
    api 'com.squareup.okhttp3:okhttp:3.10.0'

    //ARouter
    api 'com.alibaba:arouter-api:1.4.0'
    kapt 'com.alibaba:arouter-compiler:1.2.1'

    //GreenDao3
    api 'org.greenrobot:greendao:3.2.2' // add library

    // If you want to use Kotlin syntax
    /*api 'com.trello.rxlifecycle2:rxlifecycle-kotlin:2.2.2'
// If you want to use Kotlin syntax with Android Lifecycle
    api 'com.trello.rxlifecycle2:rxlifecycle-android-lifecycle-kotlin:2.2.2'
// If you want pre-written Activities and Fragments you can subclass as providers
    api 'com.trello.rxlifecycle2:rxlifecycle-components:2.2.2'*/

//    Dagger2.0
//    api 'com.google.dagger:dagger:2.15'
//    kapt 'com.google.dagger:dagger-compiler:2.15'

    //https://github.com/square/leakcanary
//    debugApi 'com.squareup.leakcanary:leakcanary-android:1.6.1'
//    releaseApi 'com.squareup.leakcanary:leakcanary-android-no-op:1.6.1'
//    // Optional, if you use support library fragments:
//    debugApi 'com.squareup.leakcanary:leakcanary-support-fragment:1.6.1'
}
